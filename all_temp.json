{
"Resources":
{
"SystemAdministrators":
  {
   "Type": "AWS::IAM::Group"   
},
  "SysadPol": {
  "Type" : "AWS::IAM::Policy",
  "Properties" : { 
    "Groups" : [ {"Ref": "SystemAdministrators"} ],
    "PolicyDocument" : {
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "VisualEditor0",
            "Effect": "Allow",
            "Action": [
                "rds:*",
                "dynamodb:ListTables",
                "cloudtrail:*",
                "dynamodb:ListTagsOfResource",
                "cloudfront:*",
                "dynamodb:DescribeReservedCapacityOfferings",
                "dynamodb:DescribeTable",
                "dynamodb:GetItem",
                "dynamodb:DescribeContinuousBackups",
                "dynamodb:DescribeLimits",
                "dynamodb:BatchGetItem",
                "dynamodb:ConditionCheckItem",
                "s3:*",
                "dynamodb:ListBackups",
                "dynamodb:Scan",
                "dynamodb:Query",
                "dynamodb:DescribeStream",
                "dynamodb:DescribeTimeToLive",
                "dynamodb:ListStreams",
                "dynamodb:DescribeGlobalTableSettings",
                "dynamodb:ListGlobalTables",
                "cloudwatch:*",
                "waf:*",
                "dynamodb:GetShardIterator",
                "dynamodb:DescribeGlobalTable",
                "dynamodb:DescribeReservedCapacity",
                "route53:*",
                "ec2:*",
                "dynamodb:DescribeBackup",
                "acm:*",
                "dynamodb:GetRecords"
            ],
            "Resource": "*"
        }
    ]
},
    "PolicyName" : "SystemAdminPolicy"
  }
},
    "DataAnalyst":{
           "Type": "AWS::IAM::Group"
                  },
				  "Policyreadonly": {
                          "Type" : "AWS::IAM::Policy",
                          "Properties" : { 
                                "Groups" : [ {"Ref": "DataAnalyst"} ],
                                "PolicyDocument" : {
    "Version" : "2012-10-17",
    "Statement": [
        {
            "Sid": "VisualEditor0",
            "Effect": "Allow",
            "Action": [
                "cloudtrail:LookupEvents",
                "cloudwatch:GetDashboard",
                "s3:*",
                "cloudwatch:GetMetricData",
                "cloudtrail:GetTrailStatus",
                "cloudtrail:GetEventSelectors",
                "cloudwatch:GetMetricStatistics",
                "cloudwatch:ListMetrics",
                "acm:ListTagsForCertificate",
                "glue:*",
                "cloudtrail:DescribeTrails",
                "cloudwatch:DescribeAlarmHistory",
                "acm:DescribeCertificate",
                "acm:GetCertificate",
                "cloudtrail:ListPublicKeys",
                "cloudwatch:DescribeAlarmsForMetric",
                "cloudtrail:ListTags",
                "cloudwatch:ListDashboards",
                "cloudwatch:DescribeAlarms",
                "acm:ListCertificates",
                "ec2:*",
                "kinesis:*",
                "elasticmapreduce:*",
                "cloudwatch:GetMetricWidgetImage"
            ],
            "Resource": "*"
        }
    ]
},
  "PolicyName": "Anonypol"
  
   }
},
	
        "S3Bucket" : {
      "Type" : "AWS::S3::Bucket",
      "Properties" : {
        "AccessControl" : "PublicRead"
                       }
                     },
	
	"SalesTeam": {
         "Type": "AWS::IAM::Group"
   },
     "IamPolicy": {
         "Type" : "AWS::IAM::Policy",
         "Properties" : { 
                 "Groups" : [ {"Ref": "SalesTeam"} ],
                 "PolicyDocument" : {
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
	             "autoscaling:Describe*",
				 "elasticloadbalancing:Describe*",
				 "ec2:Describe*",
				 "s3:Get*",
                 "s3:List*",
				 "rds:Describe*",
                 "rds:ListTagsForResource",
                 "ec2:DescribeAccountAttributes",
                 "ec2:DescribeAvailabilityZones",
                 "ec2:DescribeInternetGateways",   
                 "ec2:DescribeVpcAttribute",                
				 "cloudwatch:GetMetricStatistics",
                 "logs:DescribeLogStreams",
                 "logs:GetLogEvents",
				 "route53:Get*",
                 "route53:List*",
                 "route53:TestDNSAnswer",
				 "iam:GenerateCredentialReport",
                 "iam:GenerateServiceLastAccessedDetails",
                 "iam:Get*",
                 "iam:List*",
                 "iam:SimulateCustomPolicy",
                 "iam:SimulatePrincipalPolicy",
				 "application-autoscaling:DescribeScalableTargets",
                "application-autoscaling:DescribeScalingActivities",
                "application-autoscaling:DescribeScalingPolicies",
                "datapipeline:DescribeObjects",
                "datapipeline:DescribePipelines",
                "datapipeline:GetPipelineDefinition",
                "datapipeline:ListPipelines",
                "datapipeline:QueryObjects",
                "dynamodb:BatchGetItem",
                "dynamodb:DescribeTable",
                "dynamodb:GetItem",
                "dynamodb:ListTables",
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:DescribeReservedCapacity",
                "dynamodb:DescribeReservedCapacityOfferings",
                "dynamodb:ListTagsOfResource",
                "dynamodb:DescribeTimeToLive",
                "dynamodb:DescribeLimits",
                "dynamodb:ListGlobalTables",
                "dynamodb:DescribeGlobalTable",
                "dynamodb:DescribeBackup",
                "dynamodb:ListBackups",
                "dynamodb:DescribeContinuousBackups",
                "dax:Describe*",
                "dax:List*",
                "dax:GetItem",
                "dax:BatchGetItem",
                "dax:Query",
                "dax:Scan",
                "ec2:DescribeVpcs",
                "ec2:DescribeSubnets",
                "ec2:DescribeSecurityGroups",
                "iam:GetRole",
                "iam:ListRoles",
                "sns:ListSubscriptionsByTopic",
                "sns:ListTopics",
                "lambda:ListEventSourceMappings",
                "cloudwatch:Describe*",
                "cloudwatch:Get*",
                "cloudwatch:List*",
                "logs:Get*",
                "logs:List*",
                "logs:Describe*",
                "logs:TestMetricFilter",
                "logs:FilterLogEvents",
                "sns:Get*",
                "sns:List*",
				"cloudformation:Describe*",
                "cloudformation:EstimateTemplateCost",
                "cloudformation:Get*",
                "cloudformation:List*",
                "cloudformation:ValidateTemplate",
				"s3:GetObject",
                "s3:GetBucketLocation",
				"cloudtrail:GetTrailStatus",
                "cloudtrail:DescribeTrails",
                "cloudtrail:LookupEvents",
                "cloudtrail:ListTags",
                "cloudtrail:ListPublicKeys",
                "cloudtrail:GetEventSelectors",
                "s3:ListAllMyBuckets",
                "kms:ListAliases",
                "lambda:ListFunctions",
				 "acm:ListCertificates",
                "cloudfront:Get*",
                "cloudfront:List*",
                "iam:ListServerCertificates",
                "waf:ListWebACLs",
                "waf:GetWebACL","waf:Get*",
                "waf:List*",
                "waf-regional:Get*",
                "waf-regional:List*"
			      	],
            "Resource": "*"
         }
    ]
},
          "PolicyName" : "SalesPolicy"
       }
     },
	 	 "IamPolicy1": {
         "Type" : "AWS::IAM::Policy",
         "Properties" : { 
                 "Groups" : [ {"Ref": "SalesTeam"} ],
                 "PolicyDocument" : {
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
			    "acm:DescribeCertificate",
                "acm:GetCertificate",
                "acm:ListTagsForCertificate",
			    "kinesis:Get*",
                "kinesis:List*",
                "kinesis:Describe*",
                "codecommit:Get*",
                "codecommit:List*",
                "codecommit:GitPull",
				"codecommit:BatchGet*",
                "codecommit:Describe*",                               
				"sns:GetTopicAttributes",
				"iam:ListUsers",
				"iam:ListAccessKeys",
                "iam:ListSSHPublicKeys",
                "iam:ListServiceSpecificCredentials",
                "iam:ListAccessKeys",
                "iam:GetSSHPublicKey",
				"codebuild:BatchGet*",
                "codebuild:Get*",
                "codebuild:List*",
                "codecommit:GetBranch",
                "codecommit:GetCommit",
                "events:DescribeRule",
                "events:ListTargetsByRule",
                "events:ListRuleNamesByTarget",
                "logs:GetLogEvents",
				"codedeploy:Batch*",
                "codedeploy:Get*",
                "codedeploy:List*",
				"codepipeline:GetPipeline",
                "codepipeline:GetPipelineState",
                "codepipeline:GetPipelineExecution",
                "codepipeline:ListPipelineExecutions",
                "codepipeline:ListActionTypes",
                "codepipeline:ListPipelines",
                "s3:GetBucketPolicy",
                "codecommit:ListBranches",
                "codecommit:ListRepositories",
                "codedeploy:GetApplication",
                "codedeploy:GetDeploymentGroup",
                "codedeploy:ListApplications",
                "codedeploy:ListDeploymentGroups",
                "elasticbeanstalk:DescribeApplications",
                "elasticbeanstalk:DescribeEnvironments",
                "lambda:GetFunctionConfiguration",
                "opsworks:DescribeApps",
                "opsworks:DescribeLayers",
                "opsworks:DescribeStacks",
				"glue:GetConnections",
                "glue:GetCrawler",
                "glue:GetCrawlers",
                "glue:GetDataCatalogEncryptionSettings",
                "glue:GetClassifiers",
                "elasticmapreduce:ListBootstrapActions",
                "glue:GetTableVersions",
                "glue:GetPartitions",
                "elasticmapreduce:DescribeCluster",
                "aws-portal:ViewUsage",
                "glue:GetDevEndpoint",
                "elasticmapreduce:ListInstanceGroups",
                "glue:GetSecurityConfiguration",
                "glue:GetCatalogImportStatus",
                "glue:GetResourcePolicy",
                "elasticmapreduce:DescribeStep",
                "elasticmapreduce:ListInstances",
                "aws-portal:ViewPaymentMethods",
                "glue:GetConnection",
                "glue:GetTrigger",
                "glue:GetUserDefinedFunction",
                "elasticmapreduce:ListSecurityConfigurations",
                "glue:GetJobRun",
                "elasticmapreduce:ListClusters",
                "glue:GetUserDefinedFunctions",
                "glue:GetClassifier",
                "elasticmapreduce:DescribeSecurityConfiguration",
                "glue:GetJobs",
                "glue:GetTables",
                "elasticmapreduce:ViewEventsFromAllClustersInConsole",
                "glue:GetTriggers",
                "elasticmapreduce:ListSteps",
                "aws-portal:*",
                "glue:BatchGetPartition",
                "glue:GetSecurityConfigurations",
                "glue:GetDatabases",
                "glue:GetTable",
                "glue:GetDatabase",
                "glue:GetPartition",
                "glue:GetDevEndpoints",
                "glue:GetDataflowGraph",
                "glue:GetPlan",
                "glue:GetCrawlerMetrics",
                "elasticmapreduce:DescribeJobFlows",
                "glue:GetJob",
                "glue:GetJobRuns"
			      	],
            "Resource": "*"
         }
    ]
},
          "PolicyName" : "SalesPolicy"
       }
     }
}
}
